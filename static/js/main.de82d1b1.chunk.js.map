{"version":3,"sources":["Redux/Action.js","ComponentUI/Register.js","ComponentUI/Login.js","ComponentUI/Welcome.js","ComponentUI/Navbar.js","ComponentUI/UserUI.js","Component/User.js","App.js","serviceWorker.js","Redux/Reducer.js","Redux/Store.js","index.js"],"names":["anotherData","udata","type","payload","Register","props","state","fname","lname","email","password","address","redirect","event","preventDefault","usrdata","console","log","this","getResultByAction","setState","to","name","value","onChange","e","target","onClick","handleClick","React","Component","connect","WeatherDataBind","UserData","dispatch","Login","reEmail","rePassword","loginFlag","UserDataBind","alert","userData","Welcome","editflag","history","push","className","logoutHandler","Table","striped","bordered","hover","editBtnClick","style","width","editClick","withRouter","background","href","id","UserUI","selectedOption","exact","path","component","User","App","Boolean","window","location","hostname","match","defaultState","rootReducer","combineReducers","action","reduxStore","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.de82d1b1.chunk.js","sourcesContent":["\nexport const anotherData = udata => {\n  return  {\ntype: \"User_Data\", payload: udata\n  };\n};\n\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { anotherData } from \"../Redux/Action\";\r\nclass Register extends React.Component {\r\nconstructor(props){\r\n  super(props);\r\n  this.state={\r\n    fname:'',\r\n    lname:'',\r\n    email:'',\r\n  password:'',\r\n  address:'',\r\n  redirect:false\r\n  }\r\n }\r\n \r\n handleClick(event){\r\n    event.preventDefault();\r\n    let usrdata={};\r\n    console.log(\"values : \",this.state.fname,this.state.lname,this.state.email,this.state.password,this.state.address);\r\n    usrdata={\r\n        fname:this.state.fname,\r\n        lname:this.state.lname,\r\n        email:this.state.email,\r\n        password:this.state.password,\r\n         address:this.state.address,\r\n    }\r\n  //  localStorage.setItem('formData', JSON.stringify(usrdata));\r\n     this.props.getResultByAction(usrdata);\r\n\r\n    this.setState({ redirect: true });\r\n }\r\nrender() {\r\n    if (this.state.redirect) {\r\n        return <Redirect to='/'/>;\r\n      }\r\n \r\n    return (\r\n      <div>\r\n\r\n          <h1>Register</h1>\r\n          <form>\r\n             <label>\r\n              First Name:\r\n             <input type=\"text\" name=\"fname\" value={this.state.fname}\r\n             onChange={(e) => this.setState({fname:e.target.value})} />\r\n             </label>\r\n             <br/>\r\n             <label>\r\n              Last Name:\r\n             <input type=\"text\" name=\"lname\" value={this.state.lname}\r\n             onChange={(e) => this.setState({lname:e.target.value})}/>\r\n             </label>\r\n             <br/>\r\n             <label>\r\n              Email:\r\n              <input type=\"text\" name=\"email\" value={this.state.email}\r\n             onChange={(e) => this.setState({email:e.target.value})}/>\r\n             </label>\r\n             <br/>\r\n             <label>\r\n              Password:\r\n              <input type=\"password\" name=\"password\" value={this.state.password}\r\n             onChange={(e) => this.setState({password:e.target.value})}/>\r\n             </label>\r\n             <br/>\r\n             <label>\r\n              Address:\r\n              <input type=\"text\" name=\"address\" value={this.state.address}\r\n             onChange={(e) => this.setState({address:e.target.value})}/>\r\n             </label>\r\n             <br/>\r\n             <input type=\"submit\" value=\"Submit\" onClick={(event) => this.handleClick(event)}/>\r\n             </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  \r\n    console.log(state);\r\n    return {\r\n      WeatherDataBind: state.UserData\r\n    };\r\n  };\r\n  const mapDispatchToProps = (dispatch) =>{\r\n      return{\r\n        getResultByAction:(udata)=>{\r\n            dispatch(anotherData(udata))\r\n        }\r\n      }\r\n  }\r\n  export default connect(mapStateToProps, mapDispatchToProps )(\r\n    Register\r\n  );\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nclass Login extends React.Component {\r\nconstructor(props){\r\n  super(props);\r\n  this.state={\r\n    email:'',\r\n    password:'',\r\n    reEmail:'',\r\n    rePassword:'',\r\n    loginFlag:false\r\n  }\r\n }\r\n//  componentDidMount(){\r\n//    // let retrievedObject = JSON.parse(localStorage.getItem('formData'));\r\n     \r\n//      this.setState({ reEmail: retrievedObject.email,\r\n//         rePassword: retrievedObject.password\r\n//       })\r\n//  }\r\n handleClick(event){\r\n     debugger\r\n     event.preventDefault();\r\n if(this.state.email === this.props.UserDataBind.email && this.state.password === this.props.UserDataBind.password)\r\n {\r\n     this.setState({\r\n        loginFlag:true\r\n     })\r\n }\r\n else{\r\n     alert(\"Please check credential\");\r\n }\r\n}\r\nrender() {\r\n    if (this.state.loginFlag) {\r\n        return <Redirect to='/welcome'/>;\r\n      }\r\n    return (\r\n      <div>\r\n         <h1> Login </h1>\r\n         <form>\r\n             <label>\r\n              Email:\r\n             <input type=\"text\" name=\"email\" value={this.state.email}\r\n             onChange={(e) => this.setState({email:e.target.value})} />\r\n             </label>\r\n             <br/>\r\n             <label>\r\n              Password:\r\n             <input type=\"password\" name=\"password\" value={this.state.password}\r\n             onChange={(e) => this.setState({password:e.target.value})}/>\r\n             </label>\r\n             <br/>\r\n             <input type=\"submit\" value=\"Submit\" onClick={(event) => this.handleClick(event)}/>\r\n             </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  \r\n    console.log(\"Login page : \",state);\r\n    return {\r\n      UserDataBind: state.UserData.userData\r\n    };\r\n  };\r\n  export default connect(mapStateToProps)(\r\n    Login\r\n  );\r\n","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport { anotherData } from \"../Redux/Action\";\r\nclass Welcome extends React.Component {\r\nconstructor(props){\r\n  super(props);\r\n  this.state={\r\n    email:'',\r\n    password:'',\r\n    reEmail:'',\r\n    rePassword:'',\r\n    loginFlag:false,\r\n    editflag:false\r\n  }\r\n }\r\n logoutHandler(){\r\n    this.props.history.push(\"/\");\r\n }\r\n editBtnClick(event){\r\n    this.setState({ editflag: true,\r\n        fname:this.props.UserDataBind.fname,\r\n        lname:this.props.UserDataBind.lname,\r\n        email:this.props.UserDataBind.email,\r\n        password:this.props.UserDataBind.password,\r\n        address:this.props.UserDataBind.address });\r\n }\r\n\r\n editClick(event){\r\n    event.preventDefault();\r\n    let usrdata={};\r\n    usrdata={\r\n        fname:this.state.fname,\r\n        lname:this.state.lname,\r\n        email:this.state.email,\r\n        password:this.state.password,\r\n         address:this.state.address,\r\n    }\r\n   // localStorage.setItem('formData', JSON.stringify(usrdata));\r\n     this.props.getResultByAction(usrdata);\r\n\r\n\r\n }\r\n\r\nrender() {\r\n    \r\n    return (\r\n    \r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n            <div className=\"col-lg-4 \"></div>\r\n            <div className=\"col-lg-4 \"></div>\r\n            <div className=\"col-lg-4 \"><button onClick={() => this.logoutHandler()}>Logout</button></div>\r\n            </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12 \">\r\n         <h1> Welcome </h1>\r\n         <Table striped bordered hover>\r\n  <thead>\r\n    <tr>\r\n      <th>#</th>\r\n      <th>First Name</th>\r\n      <th>Last Name</th>\r\n      <th>Email</th>\r\n      <th>Password</th>\r\n      <th>Address</th>\r\n       <th>Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>1</td>\r\n    <td>{this.props.UserDataBind.fname}</td>\r\n      <td>{this.props.UserDataBind.lname}</td>\r\n      <td>{this.props.UserDataBind.email}</td>\r\n      <td>{this.props.UserDataBind.password}</td>\r\n      <td>{this.props.UserDataBind.address}</td>\r\n      <td><input type=\"submit\" value=\"Edit\" onClick={(event) => this.editBtnClick(event)}/></td>\r\n    </tr>\r\n   \r\n  </tbody>\r\n</Table>\r\n</div>\r\n</div>\r\n<div className=\"row\">\r\n            <div className=\"col-lg-4\"></div>\r\n            {!this.state.editflag ? null : (\r\n              <div className=\"col-lg-4 \">\r\n                <div\r\n                  className=\"card bg-transparent mt-5 border-0\"\r\n                  style={{ width: \"20rem\" }}\r\n                >\r\n                  <div className=\"card-body\">\r\n                  <form>\r\n             <label>\r\n              First Name:\r\n             <input type=\"text\" name=\"fname\" value={this.state.fname}\r\n             onChange={(e) => this.setState({fname:e.target.value})} />\r\n             </label>\r\n             <br/>\r\n             <label>\r\n              Last Name:\r\n             <input type=\"text\" name=\"lname\" value={this.state.lname}\r\n             onChange={(e) => this.setState({lname:e.target.value})}/>\r\n             </label>\r\n             <br/>\r\n             <label>\r\n              Email:\r\n              <input type=\"text\" name=\"email\" value={this.state.email}\r\n             onChange={(e) => this.setState({email:e.target.value})}/>\r\n             </label>\r\n             <br/>\r\n             \r\n             <label>\r\n              Password:\r\n              <input type=\"password\" name=\"password\" value={this.state.password}\r\n             onChange={(e) => this.setState({password:e.target.value})}/>\r\n             </label>\r\n             <br/>\r\n             <label>\r\n              Address:\r\n              <input type=\"text\" name=\"address\" value={this.state.address}\r\n             onChange={(e) => this.setState({address:e.target.value})}/>\r\n             </label>\r\n             <br/>\r\n             <input type=\"submit\" value=\"Submit\" onClick={(event) => this.editClick(event)}/>\r\n             </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"col-lg-4\"></div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  \r\n    console.log(\"welcome page : \",state);\r\n    return {\r\n        UserDataBind: state.UserData.userData\r\n        \r\n    };\r\n  };\r\n  const mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n      getResultByAction:(udata)=>{\r\n          dispatch(anotherData(udata))\r\n      }\r\n    }\r\n}\r\n  export default connect(mapStateToProps,mapDispatchToProps)(\r\n    Welcome\r\n  );\r\n","import React from 'react';\r\nimport {Link,withRouter} from 'react-router-dom'\r\nfunction Navbar (props){\r\n  return (\r\n     <nav>\r\n         \r\n        <div className=\"nav-wrapper\" style={{background:\"red\"}}>\r\n        <a href=\"#\" className=\"brand-logo\">Demo App</a>\r\n        <ul id=\"nav-mobile\" className=\"right\">\r\n            <ul><Link to=\"/\">Login</Link></ul>\r\n            <ul><Link to=\"/Register\">Register</Link></ul>\r\n        </ul>\r\n        </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nexport default withRouter(Navbar);","import React, { Component } from \"react\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport Welcome from \"./Welcome\";\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport Navbar from \"./Navbar\";\n\n\n\nexport class UserUI extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedOption: \"Select City\"\n    };\n  }\n  \n  render() {\n    return (\n      <div className=\"Back\">\n        <div className=\"container\">\n          <div className=\"row\">\n           \n                <div className=\"col-lg-12\">\n                    <BrowserRouter>\n                       <div className=\"App\">\n                           <Navbar />\n                           <Route exact path=\"/\" component={Login} />\n                           <Route path=\"/Register\" component={Register} />\n                           <Route path=\"/Welcome\" component={Welcome} />\n                       </div>\n                   </BrowserRouter>\n                </div>\n              </div>\n            </div>\n          \n        \n      </div>\n    );\n  }\n}\nexport default UserUI;\n","import React, { Component } from \"react\";\n\nimport UserUI from \"../ComponentUI/UserUI\";\n\nexport class User extends Component {\n  render() {\n    return <UserUI/>;\n  }\n}\n\nexport default User;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport User from \"./Component/User\";\n\nexport class App extends Component {\n  render() {\n    return <User/>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let defaultState = {\n  userData:[],\n  editflag:false\n  \n}\n\n\nexport const getUserDataReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case \"User_Data\":\n      return {\n        ...state,\n        userData:action.payload\n      };\n     \n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { getUserDataReducer } from \"./Reducer\";\n\nlet rootReducer = combineReducers({\n  UserData: getUserDataReducer\n});\n\nexport const reduxStore = createStore(rootReducer, applyMiddleware(thunk));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./CSS/WeatherUI.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { reduxStore } from \"./Redux/Store\";\nReactDOM.render(\n  <Provider store={reduxStore}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}